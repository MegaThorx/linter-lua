var CompositeDisposable;

CompositeDisposable = require('atom').CompositeDisposable;

module.exports = {
  config: {
    executablePath: {
      type: 'string',
      "default": 'luac',
      description: 'The executable path to luac or luajit.'
    }
  },
  activate: function() {
    require('atom-package-deps').install('linter-lua');
    this.subscriptions = new CompositeDisposable;
    return this.subscriptions.add(atom.config.observe('linter-lua.executablePath', (function(_this) {
      return function(executablePath) {
        return _this.executablePath = executablePath;
      };
    })(this)));
  },
  deactivate: function() {
    return this.subscriptions.dispose();
  },
  provideLinter: function() {
    var helpers, provider, regex;
    helpers = require('atom-linter');
    regex = '^.+?:.+?:' + '(?<line>\\d+):\\s+' + '(?<message>.+?' + '(?:near (?<near>.+)|$))';
    return provider = {
      grammarScopes: ['source.lua'],
      scope: 'file',
      lintOnFly: true,
      lint: (function(_this) {
        return function(textEditor) {
          var parameters;
          parameters = [];
          if (_this.executablePath.indexOf('luajit') !== -1) {
            parameters.push('-bl');
          } else {
            parameters.push('-p');
          }
          parameters.push('-');
          return helpers.exec(_this.executablePath, parameters, {
            stdin: textEditor.getText(),
            stream: 'stderr'
          }).then(function(output) {
            return helpers.parse(output, regex, {
              filePath: textEditor.getPath()
            }).map(function(error) {
              error.type = 'Error';
              return error;
            });
          });
        };
      })(this)
    };
  }
};

// ---
// generated by coffee-script 1.9.2
